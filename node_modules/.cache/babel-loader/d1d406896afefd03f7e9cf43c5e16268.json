{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\los-chicotes\\\\skylab-bootcamp-201901\\\\staff\\\\groups\\\\null\\\\smart-fridge\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\los-chicotes\\\\skylab-bootcamp-201901\\\\staff\\\\groups\\\\null\\\\smart-fridge\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\los-chicotes\\\\skylab-bootcamp-201901\\\\staff\\\\groups\\\\null\\\\smart-fridge\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\los-chicotes\\\\skylab-bootcamp-201901\\\\staff\\\\groups\\\\null\\\\smart-fridge\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\los-chicotes\\\\skylab-bootcamp-201901\\\\staff\\\\groups\\\\null\\\\smart-fridge\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\lluna\\\\bootcamp\\\\collab\\\\los-chicotes\\\\skylab-bootcamp-201901\\\\staff\\\\groups\\\\null\\\\smart-fridge\\\\src\\\\Components\\\\Results\\\\index.js\";\nimport React, { Component } from 'react'; // import search from '../'\n\nimport './index.sass';\nimport logic from '../../logic';\n\nvar Results =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Results, _Component);\n\n  function Results() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Results);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Results)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      redirect: false\n    };\n\n    _this.onDetails = function (event) {\n      event.preventDefault();\n    };\n\n    return _this;\n  }\n\n  _createClass(Results, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = JSON.parse(sessionStorage.getItem('user'));\n      var maxCalories = logic.caloriesCounter(user.gender, user.height, user.weight, user.birthDate, user.lifeStyle);\n      console.log(maxCalories);\n      var recipes = this.props.recipes;\n      var maxFats = maxCalories * 30 / 100;\n      var maxProtein = maxCalories * 30 / 100;\n      var maxCarhohidrates = maxCalories * 40 / 100;\n      return React.createElement(\"section\", {\n        className: \"results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card_columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, recipes.map(function (recipe) {\n        return React.createElement(\"div\", {\n          className: \"card col-lg-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          className: \"card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, recipe.recipe.label), React.createElement(\"img\", {\n          className: \"card-img-top\",\n          alt: \"recipe\",\n          src: recipe.recipe.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), React.createElement(\"i\", {\n          class: \"far fa-heart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Total Calories:\"), React.createElement(\"div\", {\n          class: \"progressBarContainer__total\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"progressBar\",\n          ref: \"progressBar\",\n          class: \"progressBar\",\n          style: {\n            width: recipe.recipe.totalNutrients.ENERC_KCAL.quantity / recipe.recipe.yield / maxCalories * 100 + '%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          class: \"progressText\",\n          ref: \"progressText\",\n          id: \"progressText\",\n          style: {\n            marginLeft: recipe.recipe.totalNutrients.ENERC_KCAL.quantity / recipe.recipe.yield / maxCalories * 100 + '%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, (recipe.recipe.totalNutrients.ENERC_KCAL.quantity / recipe.recipe.yield / maxCalories * 100).toFixed(2) + '%'))), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Total carbohydrates:\"), React.createElement(\"div\", {\n          class: \"progressBarContainer__hidracarbon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"progressBar\",\n          ref: \"progressBar\",\n          class: \"progressBar\",\n          style: {\n            width: recipe.recipe.totalNutrients.CHOCDF.quantity / recipe.recipe.yield / maxCarhohidrates * 100 + '%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          class: \"progressText\",\n          ref: \"progressText\",\n          id: \"progressText\",\n          style: {\n            marginLeft: recipe.recipe.totalNutrients.CHOCDF.quantity / recipe.recipe.yield / maxCarhohidrates * 100 + '%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, (recipe.recipe.totalNutrients.CHOCDF.quantity / recipe.recipe.yield / maxCarhohidrates * 100).toFixed(2) + '%'))), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \"Total protein:\"), React.createElement(\"div\", {\n          class: \"progressBarContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"progressBar\",\n          ref: \"progressBar\",\n          class: \"progressBar\",\n          style: {\n            width: recipe.recipe.totalNutrients.PROCNT.quantity / recipe.recipe.yield / maxProtein * 100 + '%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          class: \"progressText\",\n          ref: \"progressText\",\n          id: \"progressText\",\n          style: {\n            marginLeft: recipe.recipe.totalNutrients.PROCNT.quantity / recipe.recipe.yield / maxProtein * 100 + '%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, (recipe.recipe.totalNutrients.PROCNT.quantity / recipe.recipe.yield / maxProtein * 100).toFixed(2) + '%'))), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Total fats:\"), React.createElement(\"div\", {\n          class: \"progressBarContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"progressBar\",\n          ref: \"progressBar\",\n          class: \"progressBar\",\n          style: {\n            width: recipe.recipe.totalNutrients.FAT.quantity / recipe.recipe.yield / maxFats * 100 + '%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          class: \"progressText\",\n          ref: \"progressText\",\n          id: \"progressText\",\n          style: {\n            marginLeft: recipe.recipe.totalNutrients.FAT.quantity / recipe.recipe.yield / maxFats * 100 + '%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, (recipe.recipe.totalNutrients.FAT.quantity / recipe.recipe.yield / maxFats * 100).toFixed(2) + '%'))), React.createElement(\"div\", {\n          className: \"time\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Total time: \", recipe.recipe.totalTime), React.createElement(\"button\", {\n          className: \"btn btn-dark inline\",\n          onClick: _this2.onDetails,\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"More details\"), React.createElement(\"a\", {\n          className: \"link_recipe\",\n          href: recipe.recipe.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Go to recipe\")));\n      })));\n    }\n  }]);\n\n  return Results;\n}(Component);\n\nexport default Results; //    <label>Total carbohydrates:</label>\n//             <div id=\"range-follow\" class=\"range-follow\">\n//                 <input class=\"slider\" id=\"slider\" onmousemove=\"follow()\" type=\"range\" min=\"0\" max=\"100\" value={Math.round((recipe.recipe.totalNutrients.CHOCDF.quantity)/recipe.recipe.yield)} />\n//             </div>\n//         <p></p>\n//         <label>Total protein:</label>\n//             <div id=\"range-follow\" class=\"range-follow\">\n//                 <input class=\"slider\" id=\"slider\" onmousemove=\"follow()\" type=\"range\" min=\"0\" max=\"100\" value={Math.round((recipe.recipe.totalNutrients.PROCNT.quantity)/recipe.recipe.yield)}/>\n//             </div>\n//         <label>Total fats:</label>\n//             <div id=\"range-follow\" class=\"range-follow\">\n//                 <input class=\"slider\" id=\"slider\" onmousemove=\"follow()\" type=\"range\" min=\"0\" max=\"100\" value= {Math.round((recipe.recipe.totalNutrients.FAT.quantity)/recipe.recipe.yield)}/>\n//             </div>\n//             <div className=\"time\">Total time: {recipe.recipe.totalTime}</div>            \n//             <button className=\"btn btn-dark inline\" onClick= {this.onDetails} type=\"submit\">More details</button>\n//             <a className= \"link_recipe\" href={recipe.recipe.url}>Go to recipe</a>","map":{"version":3,"sources":["C:\\Users\\lluna\\bootcamp\\collab\\los-chicotes\\skylab-bootcamp-201901\\staff\\groups\\null\\smart-fridge\\src\\Components\\Results\\index.js"],"names":["React","Component","logic","Results","state","redirect","onDetails","event","preventDefault","user","JSON","parse","sessionStorage","getItem","maxCalories","caloriesCounter","gender","height","weight","birthDate","lifeStyle","console","log","recipes","props","maxFats","maxProtein","maxCarhohidrates","map","recipe","label","image","width","totalNutrients","ENERC_KCAL","quantity","yield","marginLeft","toFixed","CHOCDF","PROCNT","FAT","totalTime","url"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\n// import search from '../'\r\nimport './index.sass'\r\nimport logic from '../../logic'\r\n\r\n\r\nclass Results extends Component{\r\nstate={redirect:false}\r\n\r\nonDetails=event=>{\r\n    event.preventDefault();\r\n}\r\n  \r\n\r\n    render() {\r\n\r\n        const user= JSON.parse(sessionStorage.getItem('user'))\r\n        const maxCalories= logic.caloriesCounter(user.gender, user.height, user.weight, user.birthDate, user.lifeStyle)\r\n        console.log(maxCalories)\r\n        const { recipes } = this.props\r\n        const maxFats= (maxCalories*30)/100\r\n        const maxProtein= (maxCalories*30)/100\r\n        const maxCarhohidrates= (maxCalories*40)/100\r\n\r\n\r\n        return <section className=\"results\">\r\n            <div className=\"card_columns\">  \r\n\r\n            {\r\n                recipes.map(recipe => (\r\n                    <div className= \"card col-lg-5\">\r\n                         <div className=\"card-body\">       \r\n                            <h5 className=\"card-title\">{recipe.recipe.label}</h5>               \r\n                            <img className=\"card-img-top\" alt=\"recipe\" src={recipe.recipe.image}></img><i class=\"far fa-heart\"></i>  \r\n                            <label>Total Calories:</label>\r\n                                <div class=\"progressBarContainer__total\">\r\n                                    <div id=\"progressBar\" ref=\"progressBar\"class=\"progressBar\" style={{width: ((recipe.recipe.totalNutrients.ENERC_KCAL.quantity/ recipe.recipe.yield) / maxCalories)*100 + '%'}}>\r\n                                    <p class=\"progressText\" ref=\"progressText\" id=\"progressText\" style={{marginLeft: ((recipe.recipe.totalNutrients.ENERC_KCAL.quantity/ recipe.recipe.yield) / maxCalories)*100 + '%'}}>{(((recipe.recipe.totalNutrients.ENERC_KCAL.quantity/ recipe.recipe.yield) / maxCalories)*100).toFixed(2) + '%'}</p>\r\n                                    </div>\r\n                                </div>\r\n                            <label>Total carbohydrates:</label>\r\n                                <div class=\"progressBarContainer__hidracarbon\">\r\n                                    <div id=\"progressBar\" ref=\"progressBar\"class=\"progressBar\" style={{width: ((recipe.recipe.totalNutrients.CHOCDF.quantity/ recipe.recipe.yield) / maxCarhohidrates)*100 + '%'}}>\r\n                                    <p class=\"progressText\" ref=\"progressText\" id=\"progressText\" style={{marginLeft: ((recipe.recipe.totalNutrients.CHOCDF.quantity/ recipe.recipe.yield) / maxCarhohidrates)*100 + '%'}}>{(((recipe.recipe.totalNutrients.CHOCDF.quantity/ recipe.recipe.yield) / maxCarhohidrates)*100).toFixed(2) + '%'}</p>\r\n                                    </div>\r\n                                </div>\r\n                            <label>Total protein:</label>\r\n                                <div class=\"progressBarContainer\">\r\n                                    <div id=\"progressBar\" ref=\"progressBar\"class=\"progressBar\" style={{width: ((recipe.recipe.totalNutrients.PROCNT.quantity/ recipe.recipe.yield) / maxProtein)*100 + '%'}}>\r\n                                    <p class=\"progressText\" ref=\"progressText\" id=\"progressText\" style={{marginLeft: ((recipe.recipe.totalNutrients.PROCNT.quantity/ recipe.recipe.yield) / maxProtein)*100 + '%'}}>{(((recipe.recipe.totalNutrients.PROCNT.quantity/ recipe.recipe.yield) / maxProtein)*100).toFixed(2) + '%'}</p>\r\n                                    </div>\r\n                                </div>\r\n                            <label>Total fats:</label>\r\n                            <div class=\"progressBarContainer\">\r\n                                    <div id=\"progressBar\" ref=\"progressBar\"class=\"progressBar\" style={{width: ((recipe.recipe.totalNutrients.FAT.quantity/ recipe.recipe.yield) / maxFats)*100 + '%'}}>\r\n                                    <p class=\"progressText\" ref=\"progressText\" id=\"progressText\" style={{marginLeft: ((recipe.recipe.totalNutrients.FAT.quantity/ recipe.recipe.yield) / maxFats)*100 + '%'}}>{(((recipe.recipe.totalNutrients.FAT.quantity / recipe.recipe.yield) /maxFats)*100).toFixed(2) + '%'}</p>\r\n                                    </div>\r\n                            </div>\r\n                            <div className=\"time\">Total time: {recipe.recipe.totalTime}</div>            \r\n                                <button className=\"btn btn-dark inline\" onClick= {this.onDetails} type=\"submit\">More details</button>\r\n                                \r\n                            <a className= \"link_recipe\" href={recipe.recipe.url}>Go to recipe</a>\r\n                        </div>\r\n                    </div>\r\n       \r\n                            \r\n                ))\r\n                }\r\n                \r\n            </div>\r\n            </section>\r\n            }\r\n\r\n                        \r\n    }                \r\n\r\nexport default Results                \r\n                        \r\n                          \r\n                    //    <label>Total carbohydrates:</label>\r\n                    //             <div id=\"range-follow\" class=\"range-follow\">\r\n                    //                 <input class=\"slider\" id=\"slider\" onmousemove=\"follow()\" type=\"range\" min=\"0\" max=\"100\" value={Math.round((recipe.recipe.totalNutrients.CHOCDF.quantity)/recipe.recipe.yield)} />\r\n                    //             </div>\r\n                    //         <p></p>\r\n                    //         <label>Total protein:</label>\r\n                    //             <div id=\"range-follow\" class=\"range-follow\">\r\n                    //                 <input class=\"slider\" id=\"slider\" onmousemove=\"follow()\" type=\"range\" min=\"0\" max=\"100\" value={Math.round((recipe.recipe.totalNutrients.PROCNT.quantity)/recipe.recipe.yield)}/>\r\n                    //             </div>\r\n                    //         <label>Total fats:</label>\r\n                    //             <div id=\"range-follow\" class=\"range-follow\">\r\n                    //                 <input class=\"slider\" id=\"slider\" onmousemove=\"follow()\" type=\"range\" min=\"0\" max=\"100\" value= {Math.round((recipe.recipe.totalNutrients.FAT.quantity)/recipe.recipe.yield)}/>\r\n                    //             </div>\r\n                              \r\n                    //             <div className=\"time\">Total time: {recipe.recipe.totalTime}</div>            \r\n                    //             <button className=\"btn btn-dark inline\" onClick= {this.onDetails} type=\"submit\">More details</button>\r\n                                \r\n                    //             <a className= \"link_recipe\" href={recipe.recipe.url}>Go to recipe</a>\r\n\r\n                      \r\n                  \r\n            \r\n        \r\n"]},"metadata":{},"sourceType":"module"}